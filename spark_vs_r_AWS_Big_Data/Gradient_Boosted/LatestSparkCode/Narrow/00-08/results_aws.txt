Time consumed =  0:03:15.939840
Test Error = 0.0213431323203
Learned classification GBT model:
TreeEnsembleModel classifier with 3 trees

  Tree 0:
    If (feature 3 <= 809.0)
     If (feature 3 <= 295.0)
      If (feature 2 <= 79.0)
       Predict: -0.9458817429032009
      Else (feature 2 > 79.0)
       Predict: -0.9022472255525839
     Else (feature 3 > 295.0)
      If (feature 2 <= 131.0)
       Predict: -0.9569453985145603
      Else (feature 2 > 131.0)
       Predict: -0.9304581344244904
    Else (feature 3 > 809.0)
     If (feature 3 <= 1428.0)
      If (feature 2 <= 48.0)
       Predict: -0.5551020408163265
      Else (feature 2 > 48.0)
       Predict: -0.9672349304320641
     Else (feature 3 > 1428.0)
      If (feature 2 <= 48.0)
       Predict: 0.09090909090909091
      Else (feature 2 > 48.0)
       Predict: -0.9753140084389521
  Tree 1:
    If (feature 3 <= 907.0)
     If (feature 1 <= 1643.0)
      If (feature 3 <= 215.0)
       Predict: -0.4140994716141228
      Else (feature 3 > 215.0)
       Predict: -0.4323071714587761
     Else (feature 1 > 1643.0)
      If (feature 3 <= 215.0)
       Predict: -0.38724625195785767
      Else (feature 3 > 215.0)
       Predict: -0.4154321712536405
    Else (feature 3 > 907.0)
     If (feature 3 <= 1588.0)
      If (feature 0 <= 1427.0)
       Predict: -0.446089968957736
      Else (feature 0 > 1427.0)
       Predict: -0.4362351648650793
     Else (feature 3 > 1588.0)
      If (feature 0 <= 800.0)
       Predict: -0.4430329998196785
      Else (feature 0 > 800.0)
       Predict: -0.4520244499571517
  Tree 2:
    If (feature 3 <= 744.0)
     If (feature 2 <= 138.0)
      If (feature 1 <= 1626.0)
       Predict: -0.39144348094387976
      Else (feature 1 > 1626.0)
       Predict: -0.3756187478962975
     Else (feature 2 > 138.0)
      If (feature 1 <= 1626.0)
       Predict: -0.34581823045422766
      Else (feature 1 > 1626.0)
       Predict: -0.26811158210816305
    Else (feature 3 > 744.0)
     If (feature 3 <= 957.0)
      If (feature 2 <= 150.0)
       Predict: -0.40356375344753015
      Else (feature 2 > 150.0)
       Predict: -0.38095483215575426
     Else (feature 3 > 957.0)
      If (feature 1 <= 1945.0)
       Predict: -0.41055437020112767
      Else (feature 1 > 1945.0)
       Predict: -0.40126262246126826

Traceback (most recent call last):
  File "/home/hadoop/spark_vs_r/Gradient_Boosted/LatestSparkCode/Narrow/00-08/gradient_boosted_classification.py", line 67, in <module>
    model.save(sc, "GB-Class-N-2008")
  File "/usr/lib/spark/python/lib/pyspark.zip/pyspark/mllib/util.py", line 245, in save
  File "/usr/lib/spark/python/lib/py4j-0.9-src.zip/py4j/java_gateway.py", line 813, in __call__
  File "/usr/lib/spark/python/lib/py4j-0.9-src.zip/py4j/protocol.py", line 308, in get_return_value
py4j.protocol.Py4JJavaError: An error occurred while calling o70.save.
: org.apache.hadoop.mapred.FileAlreadyExistsException: Output directory hdfs://ip-172-31-42-212.ec2.internal:8020/user/hadoop/GB-Class-N-2008/metadata already exists
	at org.apache.hadoop.mapred.FileOutputFormat.checkOutputSpecs(FileOutputFormat.java:131)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply$mcV$sp(PairRDDFunctions.scala:1179)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopDataset$1.apply(PairRDDFunctions.scala:1156)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:316)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopDataset(PairRDDFunctions.scala:1156)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply$mcV$sp(PairRDDFunctions.scala:1060)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$4.apply(PairRDDFunctions.scala:1026)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:316)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:1026)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply$mcV$sp(PairRDDFunctions.scala:952)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)
	at org.apache.spark.rdd.PairRDDFunctions$$anonfun$saveAsHadoopFile$1.apply(PairRDDFunctions.scala:952)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:316)
	at org.apache.spark.rdd.PairRDDFunctions.saveAsHadoopFile(PairRDDFunctions.scala:951)
	at org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply$mcV$sp(RDD.scala:1457)
	at org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)
	at org.apache.spark.rdd.RDD$$anonfun$saveAsTextFile$1.apply(RDD.scala:1436)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:150)
	at org.apache.spark.rdd.RDDOperationScope$.withScope(RDDOperationScope.scala:111)
	at org.apache.spark.rdd.RDD.withScope(RDD.scala:316)
	at org.apache.spark.rdd.RDD.saveAsTextFile(RDD.scala:1436)
	at org.apache.spark.mllib.tree.model.TreeEnsembleModel$SaveLoadV1_0$.save(treeEnsembleModels.scala:447)
	at org.apache.spark.mllib.tree.model.GradientBoostedTreesModel.save(treeEnsembleModels.scala:131)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:57)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:606)
	at py4j.reflection.MethodInvoker.invoke(MethodInvoker.java:231)
	at py4j.reflection.ReflectionEngine.invoke(ReflectionEngine.java:381)
	at py4j.Gateway.invoke(Gateway.java:259)
	at py4j.commands.AbstractCommand.invokeMethod(AbstractCommand.java:133)
	at py4j.commands.CallCommand.execute(CallCommand.java:79)
	at py4j.GatewayConnection.run(GatewayConnection.java:209)
	at java.lang.Thread.run(Thread.java:745)

